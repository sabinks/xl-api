version: '3'
services:
  # nestjs_app1:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile1
  #   container_name: nestjs_app1
  #   # restart: on-failure
  #   ports:
  #     - 3061:3000
  #   environment:
  #     - SERVER_NAME="Server A"
  #     - RBMQ_URL= 'xl_nestjs_rabbitmq'
  #   networks:
  #     - nestjs_network
  #   depends_on:
  #     - xl_nestjs_rabbitmq
  #     - postgres
  # nestjs_app2:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile2
  #   container_name: nestjs_app2
  #   ports:
  #     - 3062:3000
  #   environment:
  #     - SERVER_NAME="Server B"
  #     - RBMQ_URL= 'xl_nestjs_rabbitmq'
  #   networks:
  #     - nestjs_network
  #   depends_on:
  #     - xl_nestjs_rabbitmq
  #     - postgres
  # nestjs_app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: nestjs_app
  #   ports:
  #     - 4000:3000
  #   environment:
  #     - DB_HOST=nestjs_mysql
  #     - DB_PORT=3309
  #     - DB_DATABASE=learn_nestjs
  #     - DB_USERNAME=user
  #     - DB_PASSWORD=pass1234
  #     - TZ=Asia/Kathmandu
  #   volumes:
  #     - '.:/var/www/nestjs'
  #   networks:
  #     - nestjs_network
  #   depends_on:
  #     - nestjs_db

  # nestjs_db:
  #   image: 'mysql:8.0'
  #   container_name: nestjs_db
  #   ports:
  #     - 3009:3009
  #   environment:
  #     MYSQL_ROOT_HOST: '${DB_HOST}'
  #     MYSQL_DATABASE: '${DB_DATABASE}'
  #     MYSQL_USER: '${DB_USERNAME}'
  #     MYSQL_PASSWORD: '${DB_PASSWORD}'
  #     MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
  #     MYSQL_ALLOW_EMPTY_PASSWORD: 1
  #   volumes:
  #     - 'nestjsdbdata:/var/lib/mysql'
  #   networks:
  #     - nestjs_network
  #   healthcheck:
  #     test: ['CMD', 'mysqladmin', 'ping', '-p${DB_PASSWORD}']
  #     retries: 3
  #     timeout: 5s

  # nestjs_pma:
  #   image: phpmyadmin
  #   container_name: nestjs_pma
  #   restart: always
  #   depends_on:
  #     - nestjs_db
  #   ports:
  #     - '8081:80'
  #   environment:
  #     PMA_HOST: nestjs_db
  #     MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
  #     UPLOAD_LIMIT: 100M
  #   networks:
  #     - nestjs_network
  # app:
  #   image: xl-nestjs-app
  #   build: .
  #   ports:
  #     - '4000:3000'
  #   environment:
  #     - NODE_ENV=production
  #   depends_on:
  #     - rabbitmq
  postgres:
    container_name: xl_nestjs_postgres
    image: postgres:14-alpine
    ports:
      - 5432:5432
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=Pass1234
      - POSTGRES_USER=postgres
      - POSTGRES_DB=nest_learn
    depends_on:
      - xl_nestjs_rabbitmq
    networks:
      - nestjs_network

  xl_nestjs_rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'xl_nestjs_rabbitmq'
    environment:
      RABBITMQ_ERLANG_COOKIE: 'SWQOKODSQALRPCLNMEQG'
      RABBITMQ_DEFAULT_USER: 'guest'
      RABBITMQ_DEFAULT_PASS: 'guest'
      RABBITMQ_DEFAULT_VHOST: '/'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - nestjs_network
  # pgadmin:
  #   image: dpage/pgadmin4
  #   container_name: xl_nestjs_pgadmin
  #   restart: always
  #   ports:
  #     - '8888:80'
  #   env_file:
  #     - .env
  #   volumes:
  #     - 'nestjsdbdata:/var/lib/pgadmin'
networks:
  nestjs_network:
    driver: bridge

volumes:
  nestjsdbdata:
    driver: local
